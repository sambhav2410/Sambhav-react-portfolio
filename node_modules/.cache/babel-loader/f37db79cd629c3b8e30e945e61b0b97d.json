{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getPosition } from './get-position';\n\nvar Tracker =\n/** @class */\nfunction () {\n  function Tracker(touch) {\n    this.updateTime = Date.now();\n    this.delta = {\n      x: 0,\n      y: 0\n    };\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.lastPosition = {\n      x: 0,\n      y: 0\n    };\n    this.lastPosition = getPosition(touch);\n  }\n\n  Tracker.prototype.update = function (touch) {\n    var _a = this,\n        velocity = _a.velocity,\n        updateTime = _a.updateTime,\n        lastPosition = _a.lastPosition;\n\n    var now = Date.now();\n    var position = getPosition(touch);\n    var delta = {\n      x: -(position.x - lastPosition.x),\n      y: -(position.y - lastPosition.y)\n    };\n    var duration = now - updateTime || 16;\n    var vx = delta.x / duration * 16;\n    var vy = delta.y / duration * 16;\n    velocity.x = vx * 0.9 + velocity.x * 0.1;\n    velocity.y = vy * 0.9 + velocity.y * 0.1;\n    this.delta = delta;\n    this.updateTime = now;\n    this.lastPosition = position;\n  };\n\n  return Tracker;\n}();\n\nexport { Tracker };\n\nvar TouchRecord =\n/** @class */\nfunction () {\n  function TouchRecord() {\n    this._touchList = {};\n  }\n\n  Object.defineProperty(TouchRecord.prototype, \"_primitiveValue\", {\n    get: function () {\n      return {\n        x: 0,\n        y: 0\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TouchRecord.prototype.isActive = function () {\n    return this._activeTouchID !== undefined;\n  };\n\n  TouchRecord.prototype.getDelta = function () {\n    var tracker = this._getActiveTracker();\n\n    if (!tracker) {\n      return this._primitiveValue;\n    }\n\n    return __assign({}, tracker.delta);\n  };\n\n  TouchRecord.prototype.getVelocity = function () {\n    var tracker = this._getActiveTracker();\n\n    if (!tracker) {\n      return this._primitiveValue;\n    }\n\n    return __assign({}, tracker.velocity);\n  };\n\n  TouchRecord.prototype.track = function (evt) {\n    var _this = this;\n\n    var targetTouches = evt.targetTouches;\n    Array.from(targetTouches).forEach(function (touch) {\n      _this._add(touch);\n    });\n    return this._touchList;\n  };\n\n  TouchRecord.prototype.update = function (evt) {\n    var _this = this;\n\n    var touches = evt.touches,\n        changedTouches = evt.changedTouches;\n    Array.from(touches).forEach(function (touch) {\n      _this._renew(touch);\n    });\n\n    this._setActiveID(changedTouches);\n\n    return this._touchList;\n  };\n\n  TouchRecord.prototype.release = function (evt) {\n    var _this = this;\n\n    delete this._activeTouchID;\n    Array.from(evt.changedTouches).forEach(function (touch) {\n      _this._delete(touch);\n    });\n  };\n\n  TouchRecord.prototype._add = function (touch) {\n    if (this._has(touch)) {\n      return;\n    }\n\n    var tracker = new Tracker(touch);\n    this._touchList[touch.identifier] = tracker;\n  };\n\n  TouchRecord.prototype._renew = function (touch) {\n    if (!this._has(touch)) {\n      return;\n    }\n\n    var tracker = this._touchList[touch.identifier];\n    tracker.update(touch);\n  };\n\n  TouchRecord.prototype._delete = function (touch) {\n    delete this._touchList[touch.identifier];\n  };\n\n  TouchRecord.prototype._has = function (touch) {\n    return this._touchList.hasOwnProperty(touch.identifier);\n  };\n\n  TouchRecord.prototype._setActiveID = function (touches) {\n    this._activeTouchID = touches[touches.length - 1].identifier;\n  };\n\n  TouchRecord.prototype._getActiveTracker = function () {\n    var _a = this,\n        _touchList = _a._touchList,\n        _activeTouchID = _a._activeTouchID;\n\n    return _touchList[_activeTouchID];\n  };\n\n  return TouchRecord;\n}();\n\nexport { TouchRecord };","map":{"version":3,"sources":["../src/utils/touch-record.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { getPosition } from './get-position';\nvar Tracker = /** @class */ (function () {\n    function Tracker(touch) {\n        this.updateTime = Date.now();\n        this.delta = { x: 0, y: 0 };\n        this.velocity = { x: 0, y: 0 };\n        this.lastPosition = { x: 0, y: 0 };\n        this.lastPosition = getPosition(touch);\n    }\n    Tracker.prototype.update = function (touch) {\n        var _a = this, velocity = _a.velocity, updateTime = _a.updateTime, lastPosition = _a.lastPosition;\n        var now = Date.now();\n        var position = getPosition(touch);\n        var delta = {\n            x: -(position.x - lastPosition.x),\n            y: -(position.y - lastPosition.y),\n        };\n        var duration = (now - updateTime) || 16;\n        var vx = delta.x / duration * 16;\n        var vy = delta.y / duration * 16;\n        velocity.x = vx * 0.9 + velocity.x * 0.1;\n        velocity.y = vy * 0.9 + velocity.y * 0.1;\n        this.delta = delta;\n        this.updateTime = now;\n        this.lastPosition = position;\n    };\n    return Tracker;\n}());\nexport { Tracker };\nvar TouchRecord = /** @class */ (function () {\n    function TouchRecord() {\n        this._touchList = {};\n    }\n    Object.defineProperty(TouchRecord.prototype, \"_primitiveValue\", {\n        get: function () {\n            return { x: 0, y: 0 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TouchRecord.prototype.isActive = function () {\n        return this._activeTouchID !== undefined;\n    };\n    TouchRecord.prototype.getDelta = function () {\n        var tracker = this._getActiveTracker();\n        if (!tracker) {\n            return this._primitiveValue;\n        }\n        return __assign({}, tracker.delta);\n    };\n    TouchRecord.prototype.getVelocity = function () {\n        var tracker = this._getActiveTracker();\n        if (!tracker) {\n            return this._primitiveValue;\n        }\n        return __assign({}, tracker.velocity);\n    };\n    TouchRecord.prototype.track = function (evt) {\n        var _this = this;\n        var targetTouches = evt.targetTouches;\n        Array.from(targetTouches).forEach(function (touch) {\n            _this._add(touch);\n        });\n        return this._touchList;\n    };\n    TouchRecord.prototype.update = function (evt) {\n        var _this = this;\n        var touches = evt.touches, changedTouches = evt.changedTouches;\n        Array.from(touches).forEach(function (touch) {\n            _this._renew(touch);\n        });\n        this._setActiveID(changedTouches);\n        return this._touchList;\n    };\n    TouchRecord.prototype.release = function (evt) {\n        var _this = this;\n        delete this._activeTouchID;\n        Array.from(evt.changedTouches).forEach(function (touch) {\n            _this._delete(touch);\n        });\n    };\n    TouchRecord.prototype._add = function (touch) {\n        if (this._has(touch)) {\n            return;\n        }\n        var tracker = new Tracker(touch);\n        this._touchList[touch.identifier] = tracker;\n    };\n    TouchRecord.prototype._renew = function (touch) {\n        if (!this._has(touch)) {\n            return;\n        }\n        var tracker = this._touchList[touch.identifier];\n        tracker.update(touch);\n    };\n    TouchRecord.prototype._delete = function (touch) {\n        delete this._touchList[touch.identifier];\n    };\n    TouchRecord.prototype._has = function (touch) {\n        return this._touchList.hasOwnProperty(touch.identifier);\n    };\n    TouchRecord.prototype._setActiveID = function (touches) {\n        this._activeTouchID = touches[touches.length - 1].identifier;\n    };\n    TouchRecord.prototype._getActiveTracker = function () {\n        var _a = this, _touchList = _a._touchList, _activeTouchID = _a._activeTouchID;\n        return _touchList[_activeTouchID];\n    };\n    return TouchRecord;\n}());\nexport { TouchRecord };\n//# sourceMappingURL=touch-record.js.map"]},"metadata":{},"sourceType":"module"}