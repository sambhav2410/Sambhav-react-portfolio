{"ast":null,"code":"var eventListenerOptions;\nvar eventMap = new WeakMap();\n\nfunction getOptions() {\n  if (eventListenerOptions !== undefined) {\n    return eventListenerOptions;\n  }\n\n  var supportPassiveEvent = false;\n\n  try {\n    var noop = function () {};\n\n    var options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        supportPassiveEvent = true;\n      }\n    });\n    window.addEventListener('testPassive', noop, options);\n    window.removeEventListener('testPassive', noop, options);\n  } catch (e) {}\n\n  eventListenerOptions = supportPassiveEvent ? {\n    passive: false\n  } : false;\n  return eventListenerOptions;\n}\n\nexport function eventScope(scrollbar) {\n  var configs = eventMap.get(scrollbar) || [];\n  eventMap.set(scrollbar, configs);\n  return function addEvent(elem, events, fn) {\n    function handler(event) {\n      // ignore default prevented events\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      fn(event);\n    }\n\n    events.split(/\\s+/g).forEach(function (eventName) {\n      configs.push({\n        elem: elem,\n        eventName: eventName,\n        handler: handler\n      });\n      elem.addEventListener(eventName, handler, getOptions());\n    });\n  };\n}\nexport function clearEventsOn(scrollbar) {\n  var configs = eventMap.get(scrollbar);\n\n  if (!configs) {\n    return;\n  }\n\n  configs.forEach(function (_a) {\n    var elem = _a.elem,\n        eventName = _a.eventName,\n        handler = _a.handler;\n    elem.removeEventListener(eventName, handler, getOptions());\n  });\n  eventMap.delete(scrollbar);\n}","map":{"version":3,"sources":["../src/utils/event-hub.ts"],"names":[],"mappings":"AAYA,IAAI,oBAAJ;AAEA,IAAM,QAAQ,GAAG,IAAI,OAAJ,EAAjB;;AAEA,SAAS,UAAT,GAAmB;AACjB,MAAI,oBAAoB,KAAK,SAA7B,EAAwC;AACtC,WAAO,oBAAP;AACD;;AAED,MAAI,mBAAmB,GAAG,KAA1B;;AAEA,MAAI;AACF,QAAM,IAAI,GAAG,YAAA,CAAQ,CAArB;;AACA,QAAM,OAAO,GAAG,MAAM,CAAC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AACnD,MAAA,GAAG,EAAA,YAAA;AACD,QAAA,mBAAmB,GAAG,IAAtB;AACD;AAHkD,KAArC,CAAhB;AAKA,IAAA,MAAM,CAAC,gBAAP,CAAwB,aAAxB,EAAuC,IAAvC,EAA6C,OAA7C;AACA,IAAA,MAAM,CAAC,mBAAP,CAA2B,aAA3B,EAA0C,IAA1C,EAAgD,OAAhD;AACD,GATD,CASE,OAAO,CAAP,EAAU,CAAE;;AAEd,EAAA,oBAAoB,GAAG,mBAAmB,GAAG;AAAE,IAAA,OAAO,EAAE;AAAX,GAAH,GAAgD,KAA1F;AAEA,SAAO,oBAAP;AACD;;AAED,OAAM,SAAU,UAAV,CAAqB,SAArB,EAAyC;AAC7C,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAT,CAAa,SAAb,KAA2B,EAA3C;AAEA,EAAA,QAAQ,CAAC,GAAT,CAAa,SAAb,EAAwB,OAAxB;AAEA,SAAO,SAAS,QAAT,CACL,IADK,EAEL,MAFK,EAGL,EAHK,EAGW;AAEhB,aAAS,OAAT,CAAiB,KAAjB,EAA2B;AACzB;AACA,UAAI,KAAK,CAAC,gBAAV,EAA4B;AAC1B;AACD;;AAED,MAAA,EAAE,CAAC,KAAD,CAAF;AACD;;AAED,IAAA,MAAM,CAAC,KAAP,CAAa,MAAb,EAAqB,OAArB,CAA6B,UAAC,SAAD,EAAU;AACrC,MAAA,OAAO,CAAC,IAAR,CAAa;AAAE,QAAA,IAAI,EAAA,IAAN;AAAQ,QAAA,SAAS,EAAA,SAAjB;AAAmB,QAAA,OAAO,EAAA;AAA1B,OAAb;AAEA,MAAA,IAAI,CAAC,gBAAL,CAAsB,SAAtB,EAAiC,OAAjC,EAA0C,UAAU,EAApD;AACD,KAJD;AAKD,GAnBD;AAoBD;AAED,OAAM,SAAU,aAAV,CAAwB,SAAxB,EAA4C;AAChD,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAT,CAAa,SAAb,CAAhB;;AAEA,MAAI,CAAC,OAAL,EAAc;AACZ;AACD;;AAED,EAAA,OAAO,CAAC,OAAR,CAAgB,UAAC,EAAD,EAA6B;QAA1B,IAAA,GAAA,EAAA,CAAA,I;QAAM,SAAA,GAAA,EAAA,CAAA,S;QAAW,OAAA,GAAA,EAAA,CAAA,O;AAClC,IAAA,IAAI,CAAC,mBAAL,CAAyB,SAAzB,EAAoC,OAApC,EAA6C,UAAU,EAAvD;AACD,GAFD;AAIA,EAAA,QAAQ,CAAC,MAAT,CAAgB,SAAhB;AACD","sourceRoot":"","sourcesContent":["var eventListenerOptions;\nvar eventMap = new WeakMap();\nfunction getOptions() {\n    if (eventListenerOptions !== undefined) {\n        return eventListenerOptions;\n    }\n    var supportPassiveEvent = false;\n    try {\n        var noop = function () { };\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                supportPassiveEvent = true;\n            },\n        });\n        window.addEventListener('testPassive', noop, options);\n        window.removeEventListener('testPassive', noop, options);\n    }\n    catch (e) { }\n    eventListenerOptions = supportPassiveEvent ? { passive: false } : false;\n    return eventListenerOptions;\n}\nexport function eventScope(scrollbar) {\n    var configs = eventMap.get(scrollbar) || [];\n    eventMap.set(scrollbar, configs);\n    return function addEvent(elem, events, fn) {\n        function handler(event) {\n            // ignore default prevented events\n            if (event.defaultPrevented) {\n                return;\n            }\n            fn(event);\n        }\n        events.split(/\\s+/g).forEach(function (eventName) {\n            configs.push({ elem: elem, eventName: eventName, handler: handler });\n            elem.addEventListener(eventName, handler, getOptions());\n        });\n    };\n}\nexport function clearEventsOn(scrollbar) {\n    var configs = eventMap.get(scrollbar);\n    if (!configs) {\n        return;\n    }\n    configs.forEach(function (_a) {\n        var elem = _a.elem, eventName = _a.eventName, handler = _a.handler;\n        elem.removeEventListener(eventName, handler, getOptions());\n    });\n    eventMap.delete(scrollbar);\n}\n//# sourceMappingURL=event-hub.js.map"]},"metadata":{},"sourceType":"module"}