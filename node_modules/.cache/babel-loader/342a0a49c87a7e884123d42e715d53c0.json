{"ast":null,"code":"import { eventScope } from '../utils/';\nexport function wheelHandler(scrollbar) {\n  var addEvent = eventScope(scrollbar);\n  var target = scrollbar.options.delegateTo || scrollbar.containerEl;\n  var eventName = 'onwheel' in window || document.implementation.hasFeature('Events.wheel', '3.0') ? 'wheel' : 'mousewheel';\n  addEvent(target, eventName, function (evt) {\n    var _a = normalizeDelta(evt),\n        x = _a.x,\n        y = _a.y;\n\n    scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {\n      if (willScroll) {\n        evt.preventDefault();\n      }\n    });\n  });\n} // Normalizing wheel delta\n\nvar DELTA_SCALE = {\n  STANDARD: 1,\n  OTHERS: -3\n};\nvar DELTA_MODE = [1.0, 28.0, 500.0];\n\nvar getDeltaMode = function (mode) {\n  return DELTA_MODE[mode] || DELTA_MODE[0];\n};\n\nfunction normalizeDelta(evt) {\n  if ('deltaX' in evt) {\n    var mode = getDeltaMode(evt.deltaMode);\n    return {\n      x: evt.deltaX / DELTA_SCALE.STANDARD * mode,\n      y: evt.deltaY / DELTA_SCALE.STANDARD * mode\n    };\n  }\n\n  if ('wheelDeltaX' in evt) {\n    return {\n      x: evt.wheelDeltaX / DELTA_SCALE.OTHERS,\n      y: evt.wheelDeltaY / DELTA_SCALE.OTHERS\n    };\n  } // ie with touchpad\n\n\n  return {\n    x: 0,\n    y: evt.wheelDelta / DELTA_SCALE.OTHERS\n  };\n}","map":{"version":3,"sources":["../src/events/wheel.ts"],"names":[],"mappings":"AAEA,SACE,UADF,QAEO,WAFP;AAIA,OAAM,SAAU,YAAV,CAAuB,SAAvB,EAA6C;AACjD,MAAM,QAAQ,GAAG,UAAU,CAAC,SAAD,CAA3B;AAEA,MAAM,MAAM,GAAG,SAAS,CAAC,OAAV,CAAkB,UAAlB,IAAgC,SAAS,CAAC,WAAzD;AAEA,MAAM,SAAS,GAAI,aAAa,MAAb,IAAuB,QAAQ,CAAC,cAAT,CAAwB,UAAxB,CAAmC,cAAnC,EAAmD,KAAnD,CAAxB,GAAqF,OAArF,GAA+F,YAAjH;AAEA,EAAA,QAAQ,CAAC,MAAD,EAAS,SAAT,EAAoB,UAAC,GAAD,EAAgB;AACpC,QAAA,EAAA,GAAA,cAAA,CAAA,GAAA,CAAA;AAAA,QAAE,CAAA,GAAA,EAAA,CAAA,CAAF;AAAA,QAAK,CAAA,GAAA,EAAA,CAAA,CAAL;;AAEN,IAAA,SAAS,CAAC,wBAAV,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,GAAzC,EAA8C,UAAC,UAAD,EAAW;AACvD,UAAI,UAAJ,EAAgB;AACd,QAAA,GAAG,CAAC,cAAJ;AACD;AACF,KAJD;AAKD,GARO,CAAR;AASD,C,CAED;;AAEA,IAAM,WAAW,GAAG;AAClB,EAAA,QAAQ,EAAE,CADQ;AAElB,EAAA,MAAM,EAAE,CAAC;AAFS,CAApB;AAKA,IAAM,UAAU,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,CAAnB;;AAEA,IAAM,YAAY,GAAG,UAAC,IAAD,EAAK;AAAK,SAAA,UAAU,CAAC,IAAD,CAAV,IAAoB,UAAU,CAA9B,CAA8B,CAA9B;AAAiC,CAAhE;;AAEA,SAAS,cAAT,CAAwB,GAAxB,EAAgC;AAC9B,MAAI,YAAY,GAAhB,EAAqB;AACnB,QAAM,IAAI,GAAG,YAAY,CAAC,GAAG,CAAC,SAAL,CAAzB;AAEA,WAAO;AACL,MAAA,CAAC,EAAE,GAAG,CAAC,MAAJ,GAAa,WAAW,CAAC,QAAzB,GAAoC,IADlC;AAEL,MAAA,CAAC,EAAE,GAAG,CAAC,MAAJ,GAAa,WAAW,CAAC,QAAzB,GAAoC;AAFlC,KAAP;AAID;;AAED,MAAI,iBAAiB,GAArB,EAA0B;AACxB,WAAO;AACL,MAAA,CAAC,EAAE,GAAG,CAAC,WAAJ,GAAkB,WAAW,CAAC,MAD5B;AAEL,MAAA,CAAC,EAAE,GAAG,CAAC,WAAJ,GAAkB,WAAW,CAAC;AAF5B,KAAP;AAID,GAf6B,CAiB9B;;;AACA,SAAO;AACL,IAAA,CAAC,EAAE,CADE;AAEL,IAAA,CAAC,EAAE,GAAG,CAAC,UAAJ,GAAiB,WAAW,CAAC;AAF3B,GAAP;AAID","sourceRoot":"","sourcesContent":["import { eventScope, } from '../utils/';\nexport function wheelHandler(scrollbar) {\n    var addEvent = eventScope(scrollbar);\n    var target = scrollbar.options.delegateTo || scrollbar.containerEl;\n    var eventName = ('onwheel' in window || document.implementation.hasFeature('Events.wheel', '3.0')) ? 'wheel' : 'mousewheel';\n    addEvent(target, eventName, function (evt) {\n        var _a = normalizeDelta(evt), x = _a.x, y = _a.y;\n        scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {\n            if (willScroll) {\n                evt.preventDefault();\n            }\n        });\n    });\n}\n// Normalizing wheel delta\nvar DELTA_SCALE = {\n    STANDARD: 1,\n    OTHERS: -3,\n};\nvar DELTA_MODE = [1.0, 28.0, 500.0];\nvar getDeltaMode = function (mode) { return DELTA_MODE[mode] || DELTA_MODE[0]; };\nfunction normalizeDelta(evt) {\n    if ('deltaX' in evt) {\n        var mode = getDeltaMode(evt.deltaMode);\n        return {\n            x: evt.deltaX / DELTA_SCALE.STANDARD * mode,\n            y: evt.deltaY / DELTA_SCALE.STANDARD * mode,\n        };\n    }\n    if ('wheelDeltaX' in evt) {\n        return {\n            x: evt.wheelDeltaX / DELTA_SCALE.OTHERS,\n            y: evt.wheelDeltaY / DELTA_SCALE.OTHERS,\n        };\n    }\n    // ie with touchpad\n    return {\n        x: 0,\n        y: evt.wheelDelta / DELTA_SCALE.OTHERS,\n    };\n}\n//# sourceMappingURL=wheel.js.map"]},"metadata":{},"sourceType":"module"}