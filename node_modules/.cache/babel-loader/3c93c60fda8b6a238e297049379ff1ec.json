{"ast":null,"code":"import { eventScope, TouchRecord } from '../utils/';\nvar activeScrollbar;\nexport function touchHandler(scrollbar) {\n  var MIN_EAING_MOMENTUM = 50;\n  var EASING_MULTIPLIER = /Android/.test(navigator.userAgent) ? 3 : 2;\n  var target = scrollbar.options.delegateTo || scrollbar.containerEl;\n  var touchRecord = new TouchRecord();\n  var addEvent = eventScope(scrollbar);\n  var damping;\n  var pointerCount = 0;\n  addEvent(target, 'touchstart', function (evt) {\n    // start records\n    touchRecord.track(evt); // stop scrolling\n\n    scrollbar.setMomentum(0, 0); // save damping\n\n    if (pointerCount === 0) {\n      damping = scrollbar.options.damping;\n      scrollbar.options.damping = Math.max(damping, 0.5); // less frames on touchmove\n    }\n\n    pointerCount++;\n  });\n  addEvent(target, 'touchmove', function (evt) {\n    if (activeScrollbar && activeScrollbar !== scrollbar) return;\n    touchRecord.update(evt);\n\n    var _a = touchRecord.getDelta(),\n        x = _a.x,\n        y = _a.y;\n\n    scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {\n      if (willScroll && evt.cancelable) {\n        evt.preventDefault();\n        activeScrollbar = scrollbar;\n      }\n    });\n  });\n  addEvent(target, 'touchcancel touchend', function (evt) {\n    var velocity = touchRecord.getVelocity();\n    var momentum = {\n      x: 0,\n      y: 0\n    };\n    Object.keys(velocity).forEach(function (dir) {\n      var s = velocity[dir] / damping; // throw small values\n\n      momentum[dir] = Math.abs(s) < MIN_EAING_MOMENTUM ? 0 : s * EASING_MULTIPLIER;\n    });\n    scrollbar.addTransformableMomentum(momentum.x, momentum.y, evt);\n    pointerCount--; // restore damping\n\n    if (pointerCount === 0) {\n      scrollbar.options.damping = damping;\n    }\n\n    touchRecord.release(evt);\n    activeScrollbar = null;\n  });\n}","map":{"version":3,"sources":["../src/events/touch.ts"],"names":[],"mappings":"AAEA,SACE,UADF,EAEE,WAFF,QAGO,WAHP;AAKA,IAAI,eAAJ;AAEA,OAAM,SAAU,YAAV,CAAuB,SAAvB,EAA6C;AACjD,MAAM,kBAAkB,GAAG,EAA3B;AACA,MAAM,iBAAiB,GAAG,UAAU,IAAV,CAAe,SAAS,CAAC,SAAzB,IAAsC,CAAtC,GAA0C,CAApE;AAEA,MAAM,MAAM,GAAG,SAAS,CAAC,OAAV,CAAkB,UAAlB,IAAgC,SAAS,CAAC,WAAzD;AACA,MAAM,WAAW,GAAG,IAAI,WAAJ,EAApB;AACA,MAAM,QAAQ,GAAG,UAAU,CAAC,SAAD,CAA3B;AAEA,MAAI,OAAJ;AACA,MAAI,YAAY,GAAG,CAAnB;AAEA,EAAA,QAAQ,CAAC,MAAD,EAAS,YAAT,EAAuB,UAAC,GAAD,EAAgB;AAC7C;AACA,IAAA,WAAW,CAAC,KAAZ,CAAkB,GAAlB,EAF6C,CAI7C;;AACA,IAAA,SAAS,CAAC,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAL6C,CAO7C;;AACA,QAAI,YAAY,KAAK,CAArB,EAAwB;AACtB,MAAA,OAAO,GAAG,SAAS,CAAC,OAAV,CAAkB,OAA5B;AACA,MAAA,SAAS,CAAC,OAAV,CAAkB,OAAlB,GAA4B,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,GAAlB,CAA5B,CAFsB,CAE8B;AACrD;;AAED,IAAA,YAAY;AACb,GAdO,CAAR;AAgBA,EAAA,QAAQ,CAAC,MAAD,EAAS,WAAT,EAAsB,UAAC,GAAD,EAAgB;AAC5C,QAAI,eAAe,IAAI,eAAe,KAAK,SAA3C,EAAsD;AAEtD,IAAA,WAAW,CAAC,MAAZ,CAAmB,GAAnB;;AAEM,QAAA,EAAA,GAAA,WAAA,CAAA,QAAA,EAAA;AAAA,QAAE,CAAA,GAAA,EAAA,CAAA,CAAF;AAAA,QAAK,CAAA,GAAA,EAAA,CAAA,CAAL;;AAEN,IAAA,SAAS,CAAC,wBAAV,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,GAAzC,EAA8C,UAAC,UAAD,EAAW;AACvD,UAAI,UAAU,IAAI,GAAG,CAAC,UAAtB,EAAkC;AAChC,QAAA,GAAG,CAAC,cAAJ;AACA,QAAA,eAAe,GAAG,SAAlB;AACD;AACF,KALD;AAMD,GAbO,CAAR;AAeA,EAAA,QAAQ,CAAC,MAAD,EAAS,sBAAT,EAAiC,UAAC,GAAD,EAAgB;AACvD,QAAM,QAAQ,GAAG,WAAW,CAAC,WAAZ,EAAjB;AACA,QAAM,QAAQ,GAAG;AAAE,MAAA,CAAC,EAAE,CAAL;AAAQ,MAAA,CAAC,EAAE;AAAX,KAAjB;AAEA,IAAA,MAAM,CAAC,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,UAAA,GAAA,EAAG;AAC/B,UAAM,CAAC,GAAG,QAAQ,CAAC,GAAD,CAAR,GAAgB,OAA1B,CAD+B,CAG/B;;AACA,MAAA,QAAQ,CAAC,GAAD,CAAR,GAAgB,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,kBAAd,GAAmC,CAAnC,GAAuC,CAAC,GAAG,iBAA3D;AACD,KALD;AAOA,IAAA,SAAS,CAAC,wBAAV,CACE,QAAQ,CAAC,CADX,EAEE,QAAQ,CAAC,CAFX,EAGE,GAHF;AAMA,IAAA,YAAY,GAjB2C,CAmBvD;;AACA,QAAI,YAAY,KAAK,CAArB,EAAwB;AACtB,MAAA,SAAS,CAAC,OAAV,CAAkB,OAAlB,GAA4B,OAA5B;AACD;;AAED,IAAA,WAAW,CAAC,OAAZ,CAAoB,GAApB;AACA,IAAA,eAAe,GAAG,IAAlB;AACD,GA1BO,CAAR;AA2BD","sourceRoot":"","sourcesContent":["import { eventScope, TouchRecord, } from '../utils/';\nvar activeScrollbar;\nexport function touchHandler(scrollbar) {\n    var MIN_EAING_MOMENTUM = 50;\n    var EASING_MULTIPLIER = /Android/.test(navigator.userAgent) ? 3 : 2;\n    var target = scrollbar.options.delegateTo || scrollbar.containerEl;\n    var touchRecord = new TouchRecord();\n    var addEvent = eventScope(scrollbar);\n    var damping;\n    var pointerCount = 0;\n    addEvent(target, 'touchstart', function (evt) {\n        // start records\n        touchRecord.track(evt);\n        // stop scrolling\n        scrollbar.setMomentum(0, 0);\n        // save damping\n        if (pointerCount === 0) {\n            damping = scrollbar.options.damping;\n            scrollbar.options.damping = Math.max(damping, 0.5); // less frames on touchmove\n        }\n        pointerCount++;\n    });\n    addEvent(target, 'touchmove', function (evt) {\n        if (activeScrollbar && activeScrollbar !== scrollbar)\n            return;\n        touchRecord.update(evt);\n        var _a = touchRecord.getDelta(), x = _a.x, y = _a.y;\n        scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {\n            if (willScroll && evt.cancelable) {\n                evt.preventDefault();\n                activeScrollbar = scrollbar;\n            }\n        });\n    });\n    addEvent(target, 'touchcancel touchend', function (evt) {\n        var velocity = touchRecord.getVelocity();\n        var momentum = { x: 0, y: 0 };\n        Object.keys(velocity).forEach(function (dir) {\n            var s = velocity[dir] / damping;\n            // throw small values\n            momentum[dir] = Math.abs(s) < MIN_EAING_MOMENTUM ? 0 : s * EASING_MULTIPLIER;\n        });\n        scrollbar.addTransformableMomentum(momentum.x, momentum.y, evt);\n        pointerCount--;\n        // restore damping\n        if (pointerCount === 0) {\n            scrollbar.options.damping = damping;\n        }\n        touchRecord.release(evt);\n        activeScrollbar = null;\n    });\n}\n//# sourceMappingURL=touch.js.map"]},"metadata":{},"sourceType":"module"}