{"ast":null,"code":"import { __assign } from \"tslib\";\n\nvar ScrollbarPlugin =\n/** @class */\nfunction () {\n  function ScrollbarPlugin(scrollbar, options) {\n    var _newTarget = this.constructor;\n    this.scrollbar = scrollbar;\n    this.name = _newTarget.pluginName;\n    this.options = __assign(__assign({}, _newTarget.defaultOptions), options);\n  }\n\n  ScrollbarPlugin.prototype.onInit = function () {};\n\n  ScrollbarPlugin.prototype.onDestroy = function () {};\n\n  ScrollbarPlugin.prototype.onUpdate = function () {};\n\n  ScrollbarPlugin.prototype.onRender = function (_remainMomentum) {};\n\n  ScrollbarPlugin.prototype.transformDelta = function (delta, _evt) {\n    return __assign({}, delta);\n  };\n\n  ScrollbarPlugin.pluginName = '';\n  ScrollbarPlugin.defaultOptions = {};\n  return ScrollbarPlugin;\n}();\n\nexport { ScrollbarPlugin };\nexport var globalPlugins = {\n  order: new Set(),\n  constructors: {}\n};\nexport function addPlugins() {\n  var Plugins = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    Plugins[_i] = arguments[_i];\n  }\n\n  Plugins.forEach(function (P) {\n    var pluginName = P.pluginName;\n\n    if (!pluginName) {\n      throw new TypeError(\"plugin name is required\");\n    }\n\n    globalPlugins.order.add(pluginName);\n    globalPlugins.constructors[pluginName] = P;\n  });\n}\nexport function initPlugins(scrollbar, options) {\n  return Array.from(globalPlugins.order).filter(function (pluginName) {\n    return options[pluginName] !== false;\n  }).map(function (pluginName) {\n    var Plugin = globalPlugins.constructors[pluginName];\n    var instance = new Plugin(scrollbar, options[pluginName]); // bind plugin options to `scrollbar.options`\n\n    options[pluginName] = instance.options;\n    return instance;\n  });\n}","map":{"version":3,"sources":["src/plugin.ts"],"names":[],"mappings":";;AAIA,IAAA,eAAA;AAAA;AAAA,YAAA;AAQE,WAAA,eAAA,CACE,SADF,EAEE,OAFF,EAEe;;AAEb,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,IAAL,GAAY,UAAA,CAAW,UAAvB;AAEA,SAAK,OAAL,GAAY,QAAA,CAAA,QAAA,CAAA,EAAA,EACP,UAAA,CAAW,cADJ,CAAA,EAEP,OAFO,CAAZ;AAID;;AAED,EAAA,eAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA,CAAW,CAAX;;AACA,EAAA,eAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA,CAAc,CAAd;;AAEA,EAAA,eAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA,CAAa,CAAb;;AACA,EAAA,eAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,eAAT,EAAkC,CAAI,CAAtC;;AAEA,EAAA,eAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,KAAf,EAAgC,IAAhC,EAA2C;AACzC,WAAA,QAAA,CAAA,EAAA,EAAY,KAAZ,CAAA;AACD,GAFD;;AA1BO,EAAA,eAAA,CAAA,UAAA,GAAa,EAAb;AACA,EAAA,eAAA,CAAA,cAAA,GAAsB,EAAtB;AA4BT,SAAA,eAAA;AAAC,CA9BD,EAAA;;SAAa,e;AAuCb,OAAO,IAAM,aAAa,GAAc;AACtC,EAAA,KAAK,EAAE,IAAI,GAAJ,EAD+B;AAEtC,EAAA,YAAY,EAAE;AAFwB,CAAjC;AAKP,OAAM,SAAU,UAAV,GAAoB;AACxB,MAAA,OAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAsC;AAAtC,IAAA,OAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAEA,EAAA,OAAO,CAAC,OAAR,CAAgB,UAAC,CAAD,EAAE;AACR,QAAA,UAAA,GAAA,CAAA,CAAA,UAAA;;AAER,QAAI,CAAC,UAAL,EAAiB;AACf,YAAM,IAAI,SAAJ,CAAc,yBAAd,CAAN;AACD;;AAED,IAAA,aAAa,CAAC,KAAd,CAAoB,GAApB,CAAwB,UAAxB;AACA,IAAA,aAAa,CAAC,YAAd,CAA2B,UAA3B,IAAyC,CAAzC;AACD,GATD;AAUD;AAED,OAAM,SAAU,WAAV,CACJ,SADI,EAEJ,OAFI,EAEQ;AAEZ,SAAO,KAAK,CAAC,IAAN,CAAW,aAAa,CAAC,KAAzB,EACJ,MADI,CACG,UAAC,UAAD,EAAmB;AACzB,WAAO,OAAO,CAAC,UAAD,CAAP,KAAwB,KAA/B;AACD,GAHI,EAIJ,GAJI,CAIA,UAAC,UAAD,EAAmB;AACtB,QAAM,MAAM,GAAG,aAAa,CAAC,YAAd,CAA2B,UAA3B,CAAf;AAEA,QAAM,QAAQ,GAAG,IAAI,MAAJ,CAAW,SAAX,EAAsB,OAAO,CAAC,UAAD,CAA7B,CAAjB,CAHsB,CAKtB;;AACA,IAAA,OAAO,CAAC,UAAD,CAAP,GAAsB,QAAQ,CAAC,OAA/B;AAEA,WAAO,QAAP;AACD,GAbI,CAAP;AAcD","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nvar ScrollbarPlugin = /** @class */ (function () {\n    function ScrollbarPlugin(scrollbar, options) {\n        var _newTarget = this.constructor;\n        this.scrollbar = scrollbar;\n        this.name = _newTarget.pluginName;\n        this.options = __assign(__assign({}, _newTarget.defaultOptions), options);\n    }\n    ScrollbarPlugin.prototype.onInit = function () { };\n    ScrollbarPlugin.prototype.onDestroy = function () { };\n    ScrollbarPlugin.prototype.onUpdate = function () { };\n    ScrollbarPlugin.prototype.onRender = function (_remainMomentum) { };\n    ScrollbarPlugin.prototype.transformDelta = function (delta, _evt) {\n        return __assign({}, delta);\n    };\n    ScrollbarPlugin.pluginName = '';\n    ScrollbarPlugin.defaultOptions = {};\n    return ScrollbarPlugin;\n}());\nexport { ScrollbarPlugin };\nexport var globalPlugins = {\n    order: new Set(),\n    constructors: {},\n};\nexport function addPlugins() {\n    var Plugins = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        Plugins[_i] = arguments[_i];\n    }\n    Plugins.forEach(function (P) {\n        var pluginName = P.pluginName;\n        if (!pluginName) {\n            throw new TypeError(\"plugin name is required\");\n        }\n        globalPlugins.order.add(pluginName);\n        globalPlugins.constructors[pluginName] = P;\n    });\n}\nexport function initPlugins(scrollbar, options) {\n    return Array.from(globalPlugins.order)\n        .filter(function (pluginName) {\n        return options[pluginName] !== false;\n    })\n        .map(function (pluginName) {\n        var Plugin = globalPlugins.constructors[pluginName];\n        var instance = new Plugin(scrollbar, options[pluginName]);\n        // bind plugin options to `scrollbar.options`\n        options[pluginName] = instance.options;\n        return instance;\n    });\n}\n//# sourceMappingURL=plugin.js.map"]},"metadata":{},"sourceType":"module"}